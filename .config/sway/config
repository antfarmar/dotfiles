# ----------------------------------------------------------------------------
# Default config for sway
# Copy this to ~/.config/sway/config and edit it to your liking.
# Read `man 5 sway` for a complete reference.
# ----------------------------------------------------------------------------

### BORDERS
default_border pixel 5
hide_edge_borders smart
#smart_gaps on
#gaps inner 5
#gaps outer 5

# ----------------------------------------------------------------------------

### STATUS BAR
# Read `man 5 sway-bar` for more information about this section.
#bar {
#    position bottom
#    height 25
#    #font xos4 Terminus
#    font Arimo
#    #font Roboto
#    gaps 0 0
#    mode hide
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    #status_command while date +'%Y-%m-%d %l:%M %p'; do sleep 60; done
#    status_command while date +'%a %b %d %R '; do sleep 60; done
#
#    colors {
#        statusline #888888
#        background #111111
#        inactive_workspace #333333 #888888 #333333
#    }
#}

bar {
    swaybar_command waybar
}

# ----------------------------------------------------------------------------

### WINDOW COLORS
# color variables
set $bg #1d1f21
set $fg #c5c8c6
set $br #eeeeeeee
set $ia #232425

# class                 border  backgr. text    indicator child_border
client.focused          $br     $fg     $bg     $bg       $br
client.focused_inactive $bg     $bg     $fg     $bg       $bg
client.unfocused        $bg     $bg     $fg     $bg       $bg
#client.urgent          $br     $br     $fg     $bg       $br #currently not implemented
#client.placeholder     $br     $br     $fg     $bg       $br #currently not implemented
client.background       $bg

# ----------------------------------------------------------------------------

### VARIABLES
# Meta/Super Key
# Mod1 = Alt
# Mod4 = Logo
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term alacritty

# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
set $menu dmenu_path | dmenu | xargs swaymsg exec

# ----------------------------------------------------------------------------

### OUTPUT CONFIGURATION
# Example configuration:
# You can get the names of your outputs by running: swaymsg -t get_outputs
# output HDMI-A-1 resolution 1920x1080 position 1920,0

## Display
output eDP-1 resolution 1366x768 position 0,0

## Wallpaper
# Default (more resolutions are available in /usr/share/backgrounds/sway/)
#output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
output * bg ~/pics/walls/paper stretch

# ----------------------------------------------------------------------------

### INPUT CONFIGURATION
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

## Touchpad (libinput)
input "2:7:SynPS/2_Synaptics_TouchPad" {
    dwt disabled
    tap enabled
    drag enabled
    #drag_lock enabled
    tap_button_map lmr
    pointer_accel 0.2
    click_method clickfinger
    middle_emulation enabled
    scroll_factor 1.0
    scroll_method two_finger
}

# ----------------------------------------------------------------------------

### IDLE CONFIGURATION
# Example configuration:
# Turn off the display after 300 seconds of inactivity
# Lock the screen after 3600 seconds of inactivity
# Turn your screens back on when resumed
# Lock your screen before your computer goes to sleep.
exec swayidle -w \
    timeout 300 'swaymsg "output * dpms off"' \
         resume 'swaymsg "output * dpms on"' \
    timeout 3600 'swaylock -f -c 383c4a' \
    before-sleep 'swaylock -f -c 383c4a'

# ----------------------------------------------------------------------------
# ----------------------------------------------------------------------------

### KEY BINDINGS
## Basics:

# change the wallpaper (background picture)
set $wallpaperchange ~/scripts/wp.sh
bindsym $mod+Shift+w exec $wallpaperchange

# take a screenshot (using grim)
#set $grim ~/scripts/grim.sh
#set $slurp ~/scripts/slurp.sh
set $screendir ~/pics/screens
bindsym Print exec grim $screendir/screen-$(date +'%y%m%d-%H%M%S').png
bindsym Shift+Print exec grim -g "$(slurp)" $screendir/screen-$(date +'%y%m%d-%H%M%S').png

# start a terminal
bindsym $mod+Return exec $term

# start your launcher
bindsym $mod+d exec $menu

# kill focused window
#bindsym $mod+Shift+q kill
bindsym $mod+q kill

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# reload the configuration file
bindsym $mod+c reload

# lock the screen
bindsym $mod+Alt+l exec swaylock -Ffeli ~/pics/arch-arc-dark.png -c 383c4a

# suspend the computer (sleep)
bindsym $mod+Shift+s exec systemctl suspend

# exit sway (logs you out of your Wayland session)
#bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
bindsym $mod+Shift+e exec swaymsg exit

# ----------------------------------------------------------------------------

## Moving around:
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
# or use $mod+[up|down|left|right]
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# _move_ the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
# ditto, with arrow keys
bindsym $mod+Shift+Left move left   50
bindsym $mod+Shift+Down move down   50
bindsym $mod+Shift+Up move up       50
bindsym $mod+Shift+Right move right 50

# ----------------------------------------------------------------------------

## Workspaces:
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# ----------------------------------------------------------------------------

## Layout stuff:
# You can "split" the current object of your focus with
# $mod+b or $mod+v, for horizontal and vertical splits
# respectively.
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Swap focus between the tiling area and the floating area
bindsym $mod+space focus mode_toggle

# move focus to the parent container
bindsym $mod+a focus parent

# move focus to the child container
bindsym $mod+z focus child

# ----------------------------------------------------------------------------

## Scratchpad (minimize):
# Sway has a "scratchpad", which is a bag of holding for windows.
# You can send windows there and get them back later.

# Move the currently focused window to the scratchpad
#bindsym $mod+Shift+minus move scratchpad
bindsym $mod+Shift+x move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
#bindsym $mod+minus scratchpad show
bindsym $mod+x scratchpad show

# ----------------------------------------------------------------------------

## Resizing containers:
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # ditto, with arrow keys
    bindsym Left resize shrink width 50px
    bindsym Down resize grow height  50px
    bindsym Up resize shrink height  50px
    bindsym Right resize grow width  50px

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

# ----------------------------------------------------------------------------

## Media controls

# Sreen brightness controls
set $bldir /sys/class/backlight/amdgpu_bl0/brightness
set $blight echo $(( $(<$bldir) + $amt )) | sudo tee $bldir > /dev/null
set $blamt 10

bindsym XF86MonBrightnessDown exec "amt=-$blamt; $blight"
bindsym XF86MonBrightnessUp exec "amt=$blamt; $blight"

#bindsym XF86MonBrightnessDown exec light -U 5
#bindsym XF86MonBrightnessUp exec light -A 5

# ALSA Audio Controls
bindsym XF86AudioRaiseVolume exec amixer set Master 5%+
bindsym XF86AudioLowerVolume exec amixer set Master 5%-
bindsym XF86AudioMute exec amixer set Master toggle

# Pulse Audio Controls
#bindsym XF86AudioRaiseVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') +10%
#bindsym XF86AudioLowerVolume exec pactl set-sink-volume $(pacmd list-sinks |awk '/* index:/{print $3}') -10%
#bindsym XF86AudioMute exec pactl set-sink-mute $(pacmd list-sinks |awk '/* index:/{print $3}') toggle
#bindsym XF86AudioRaiseVolume exec pactl set-sink-volume 4 +10%
#bindsym XF86AudioLowerVolume exec pactl set-sink-volume 4 -10%
#bindsym XF86AudioMute exec pactl set-sink-mute 4 toggle

# Media player controls
#bindsym XF86AudioPlay exec playerctl play
#bindsym XF86AudioPause exec playerctl pause
#bindsym XF86AudioNext exec playerctl next
#bindsym XF86AudioPrev exec playerctl previous

# ----------------------------------------------------------------------------

include /etc/sway/config.d/*
